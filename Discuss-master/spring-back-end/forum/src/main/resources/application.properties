# ===============================
# = DATA SOURCE
# ===============================

spring.jpa.database=POSTGRESQL
spring.datasource.platform=forum

# Set here configurations for the database connection
# Connection url for the database
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres

# Username and password
spring.datasource.username=forum
spring.datasource.password=root



# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1


# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=true


# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
server.port=8585
logging.level.org.springframework:DEBUG
logging.level.com:DEBUG
spring.application.name = demoservice

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop

# les propriétés spring.datasource pour localiser l'instance de postgres et la connecter
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


spring.mvc.view.prefix: /
spring.mvc.view.suffix: .html
#spring.datasource.schema = classpath: /createdb.sql
spring.datasource.continue-on-error = true
